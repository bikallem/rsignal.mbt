// Generated using `moon info`, DON'T EDIT IT
package "bikallem/rsignal/rweb"

import(
  "bikallem/rsignal"
  "bikallem/rsignal/js_sys"
  "bikallem/rsignal/web_sys"
  "moonbitlang/core/bigint"
)

// Values
fn[T : TAttrValue] attr(String, T) -> @web_sys.Attr

fn button(String, Array[&TAttachableNode]) -> @web_sys.HTMLButtonElement

fn canvas(Array[&TAttachableNode]) -> @web_sys.HTMLCanvasElement

fn checked(rs? : @rsignal.Rsignal[Bool]) -> BoolAttr

fn[T : TAttrValue] class(T) -> @web_sys.Attr

fn disabled(rs? : @rsignal.Rsignal[Bool]) -> BoolAttr

fn div(Array[&TAttachableNode]) -> @web_sys.HTMLDivElement

fn h(String, Array[&TAttachableNode]) -> @web_sys.Element

fn[T : TAttrValue] id(T) -> @web_sys.Attr

fn input(String, Array[&TAttachableNode]) -> @web_sys.HTMLInputElement

fn mount_to_body(&TAttachableNode) -> Unit

fn[T] on(String, (T) -> Unit) -> EventHandlerAttr[T]

fn onchange((@web_sys.Event) -> Unit) -> EventHandlerAttr[@web_sys.Event]

fn onclick((@web_sys.PointerEvent) -> Unit) -> EventHandlerAttr[@web_sys.PointerEvent]

fn span(Array[&TAttachableNode]) -> @web_sys.Element

fn[T : TAttrValue] style(T) -> @web_sys.Attr

// Errors

// Types and methods
type BoolAttr
#as_free_fn
fn BoolAttr::bool_attr(String, rs? : @rsignal.Rsignal[Bool]) -> Self
fn BoolAttr::name(Self) -> String
impl TAttachableNode for BoolAttr
impl @web_sys.TEventTarget for BoolAttr
impl @web_sys.TJsValue for BoolAttr
impl @web_sys.TNode for BoolAttr

type EventHandlerAttr[E]
fn[E] EventHandlerAttr::event_name(Self[E]) -> String
fn[E] EventHandlerAttr::handler(Self[E]) -> (E) -> Unit
fn[E] EventHandlerAttr::new(String, (E) -> Unit) -> Self[E]
impl[T] TAttachableNode for EventHandlerAttr[T]
impl[T] @web_sys.TEventTarget for EventHandlerAttr[T]
impl[T] @web_sys.TJsValue for EventHandlerAttr[T]
impl[T] @web_sys.TNode for EventHandlerAttr[T]

type Styles
fn Styles::add(Self, String, String) -> Self
fn Styles::new(Map[String, String]) -> Self
fn Styles::remove(Self, String) -> Self
impl TAttrValue for Styles
impl Eq for Styles
impl Show for Styles

// Type aliases

// Traits
pub(open) trait TAttachableNode : @web_sys.TNode {
  attach(Self, @web_sys.Element) -> Unit = _
}
impl TAttachableNode for Int
impl TAttachableNode for Int16
impl TAttachableNode for Int64
impl TAttachableNode for UInt
impl TAttachableNode for UInt16
impl TAttachableNode for UInt64
impl TAttachableNode for Float
impl TAttachableNode for Double
impl TAttachableNode for String
impl[T : Show] TAttachableNode for @rsignal.Rsignal[T]
impl TAttachableNode for @web_sys.Attr
impl TAttachableNode for @web_sys.Element
impl TAttachableNode for @web_sys.HTMLButtonElement
impl TAttachableNode for @web_sys.HTMLCanvasElement
impl TAttachableNode for @web_sys.HTMLDivElement
impl TAttachableNode for @web_sys.HTMLImageElement
impl TAttachableNode for @web_sys.HTMLInputElement
impl TAttachableNode for @bigint.BigInt

pub(open) trait TAttrValue {
  set_attr(Self, @web_sys.Attr) -> Unit
}
impl TAttrValue for Bool
impl TAttrValue for Int
impl TAttrValue for Int16
impl TAttrValue for Int64
impl TAttrValue for UInt
impl TAttrValue for UInt16
impl TAttrValue for UInt64
impl TAttrValue for Float
impl TAttrValue for Double
impl TAttrValue for String
impl[T : Show] TAttrValue for @rsignal.Rsignal[T]
impl TAttrValue for @bigint.BigInt

