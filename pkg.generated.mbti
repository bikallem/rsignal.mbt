// Generated using `moon info`, DON'T EDIT IT
package "bikallem/rsignal"

// Values
fn[T : Eq] all(Array[Rsignal[T]]) -> Rsignal[Array[T]]

fn[T, U, V : Eq] map2(Rsignal[T], Rsignal[U], (T, U) -> V) -> Rsignal[V]

fn[T] new(T, label? : String) -> Rsignal[T]

fn[T : Eq, U : Eq] pair(Rsignal[T], Rsignal[U]) -> Rsignal[(T, U)]

fn[T : Default + Eq] select_one(Array[Rsignal[T]]) -> Rsignal[T]

fn[T : Eq, U : Eq, V : Eq] triple(Rsignal[T], Rsignal[U], Rsignal[V]) -> Rsignal[(T, U, V)]

// Errors

// Types and methods
type Observer[T]

type Rsignal[T]
fn[T : Eq] Rsignal::filter(Self[T], (T) -> Bool, T) -> Self[T]
fn[T, U : Eq] Rsignal::filter_map(Self[T], (T) -> U?, U) -> Self[U]
fn[T] Rsignal::id(Self[T]) -> String
fn[T, U : Eq] Rsignal::map(Self[T], (T) -> U) -> Self[U]
fn[T] Rsignal::observe(Self[T], (T) -> Unit, exec_effect? : Bool) -> Unit
fn[T] Rsignal::observer(Self[T], (T) -> Unit, exec_effect? : Bool) -> Observer[T]
fn[T] Rsignal::remove_observer(Self[T], Observer[T]) -> Unit
fn[T : Eq] Rsignal::update(Self[T], T, notify? : Bool) -> Unit
fn[T] Rsignal::val(Self[T]) -> T

// Type aliases

// Traits

